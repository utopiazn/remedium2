<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace = "member">
	
	<resultMap type="member" id="memberRes">
		<result property="memberID" 		column="memberID" />
		<result property="memberPassword" 	column="memberPassword" />
		<result property="memberName" 		column="memberName" />
		<result property="gender" 			column="gender" />
		<result property="birthday" 		column="birthday" />
		<result property="phone" 			column="phone" />
		<result property="email" 			column="email" />
		<result property="regdate" 			column="regdate" />
		<result property="deldate" 			column="deldate" />
		<result property="userAdmin" 		column="userAdmin" />
		<result property="zipcode" 			column="zipcode" />
		<result property="addr1" 			column="addr1" />
		<result property="addr2" 			column="addr2" />
		<result property="cash" 			column="cash" />		
		<result property="userCheck" 		column="userCheck" />			
	</resultMap>
	
	<sql id="select-all">
		select * from member
	</sql>
	
	<sql id="where-memberID">
		 where memberID = #memberID#
	</sql>
	
	<!-- member 테이블 모든 정보를 가져옴 -->
	<select id="selectAll" resultMap="memberRes" parameterType="String">
		<include refid="select-all" />
		order by userAdmin asc, regdate asc
	</select>
	
	<!-- 아이디 의 해당하는 정보를 모두 가져옴  -->
	<select id="selectOne" resultMap="memberRes">
		<include refid="select-all" />
		<include refid="where-memberID" />
	</select>
	
	<!-- 아이디와 비밀번호가 맞으면 아이디의 모든 정보를 가져옴  -->
	<select id="selectPassword" resultMap="memberRes">
		<include refid="select-all" />
		<include refid="where-memberID" />
		AND memberPassword = #memberPassword#
	</select>
	
	<!-- 이름 과 생년 월일을 통해 아이디를 찾음 -->
	<select id="selectFindId" resultMap="member" parameterType="member" >
		select memberID from member where memberName = #memberName# AND birthday = #birthday#
	</select>
	
	<!-- 아이디와 이름 과 생년 월일을 통해 비밀번호를 찾음 -->
	<select id="selectFindPasswd" resultMap="member">
		select memberPassword from member
		<include refid="where-memberID" />
		AND memberName = #memberName# AND birthday = #birthday#
	</select>
	
	<!--ID 중복체크 -->			
	<select id="selectDistinctID" resultMap="member">
		select * from member
		where memberID = #memberID#
	</select>
	
	<!--회원가입 입력-->		
	<insert id="insertMember" parameterType="member">
	
		INSERT INTO MEMBER 
			(MEMBERID, MEMBERPASSWORD, MEMBERNAME, GENDER, BIRTHDAY, PHONE, EMAIL, 
				REGDATE, USERADMIN, ZIPCODE, ADDR1, ADDR2, CASH, USERCHECK) 
		VALUES (#memberID#, #memberPassword#, #memberName#, #gender#, #birthday#,#phone#, #email#, 
				sysdate, #userAdmin#, #zipcode#, #addr1#, #addr2#, #cash#, #userCheck# )
	</insert>
	
	<!-- 회원 수정 -->
	<update id="updateMember" parameterType="member">
		update member set memberPassword = #memberPassword#, memberName = #memberName#,
		 		gender = #gender#, birthday = #birthday#, phone = #phone#, email = #email#, zipcode = #zipcode#,
		 		addr1 = #addr1#, addr2 = #addr2# 
		<include refid="where-memberID" />
	</update>
	
	<!-- 회원 삭제 -->
	<delete id="deleteMember" parameterType="member">
		delete from member
		<include refid="where-memberID" />
	</delete>
	
	<!-- 아이디 검색 -->
	<select id="searchID" resultMap="memberRes">
		select 	* from 	member 	where 	memberID like #memberID#
	</select>
	
	<!-- 이름 검색 -->
	<select id="searchName" resultMap="memberRes">
		select * from member where memberName like #memberName#
	</select>
	
	<!-- 핸드폰 번호 검색 -->
	<select id="searchPhone" resultMap="memberRes">
		select * from member where phone like #phone#
	</select>
	
	<!-- 캐쉬 충전 -->
	<update id="updateCash" parameterType="member">
	 update member set cash = cash + #cash#  where memberID = #memberID#
	</update>
	
	<!-- 캐쉬 결제 -->
	<update id="pay" parameterType="member">
	 update member set cash = #cash#  where memberID = #memberID#
	</update>


</mapper>